name: Build React Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3. Build clients app
      - name: Install dependencies (clients)
        working-directory: clients
        run: npm ci

      - name: Build clients app
        working-directory: clients
        env:
          CI: false
          apiKey: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          authDomain: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          projectId: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          storageBucket: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          messagingSenderId: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          appId: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
        run: npm run build

      # 4. Build manager app
      - name: Install dependencies (manager)
        working-directory: manager
        run: npm ci

      - name: Build manager app
        working-directory: manager
        env:
          CI: false
          apiKey: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          authDomain: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          projectId: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          storageBucket: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          messagingSenderId: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          appId: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
        run: npm run build
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Add Pi host key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PI_KNOWN_HOST }}" >> ~/.ssh/known_hosts
      - name: Deploy clients app to Raspberry Pi
        run: |
          ssh ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "mkdir -p /home/deployer/ABI_builds/dev_env/clients"
          rsync -avz --delete ./clients/build/ \
            ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }}:/home/deployer/ABI_builds/dev_env/clients
      
      - name: Deploy manager app to Raspberry Pi
        run: |
          ssh ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "mkdir -p /home/deployer/ABI_builds/dev_env/manager"
          rsync -avz --delete ./manager/build/ \
            ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }}:/home/deployer/ABI_builds/dev_env/manager
