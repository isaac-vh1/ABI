{"ast":null,"code":"var _jsxFileName = \"/Users/isaacvanhorn/Downloads/Code/Organization for ABI/src/Calendar/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nexport default function CalendarContainer() {\n  _s();\n  // Control the calendar's current date and view via state\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [currentView, setCurrentView] = useState(Views.MONTH);\n\n  // Example events array\n  const [events, setEvents] = useState([{\n    id: 1,\n    title: 'Existing Event',\n    start: new Date(),\n    end: new Date(new Date().setHours(new Date().getHours() + 1))\n  }]);\n\n  // Handler: when a day is clicked in Month view, switch to Week view on that date\n  const handleSelectSlot = slotInfo => {\n    // slotInfo.start is the date user clicked\n    setCurrentDate(slotInfo.start);\n    setCurrentView(Views.WEEK);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '80vh',\n      margin: '0 auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events\n      // Controlled date & view\n      ,\n      date: currentDate,\n      view: currentView\n      // Keep track of changes so the calendar updates\n      ,\n      onNavigate: newDate => setCurrentDate(newDate),\n      onView: newView => setCurrentView(newView)\n\n      // Which views to show\n      ,\n      views: [Views.MONTH, Views.WEEK]\n      // Start & end keys for event objects\n      ,\n      startAccessor: \"start\",\n      endAccessor: \"end\"\n\n      // Enable day clicks\n      ,\n      selectable: true\n      // This triggers when user clicks (or drags) on a day slot\n      ,\n      onSelectSlot: handleSelectSlot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarContainer, \"xK0GDAMzKdGnuWGcx2LyjiUrsPY=\");\n_c = CalendarContainer;\nvar _c;\n$RefreshReg$(_c, \"CalendarContainer\");","map":{"version":3,"names":["React","useState","Calendar","Views","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","CalendarContainer","_s","currentDate","setCurrentDate","Date","currentView","setCurrentView","MONTH","events","setEvents","id","title","start","end","setHours","getHours","handleSelectSlot","slotInfo","WEEK","style","height","margin","children","date","view","onNavigate","newDate","onView","newView","views","startAccessor","endAccessor","selectable","onSelectSlot","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/isaacvanhorn/Downloads/Code/Organization for ABI/src/Calendar/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = momentLocalizer(moment);\n\nexport default function CalendarContainer() {\n  // Control the calendar's current date and view via state\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [currentView, setCurrentView] = useState(Views.MONTH);\n\n  // Example events array\n  const [events, setEvents] = useState([\n    {\n      id: 1,\n      title: 'Existing Event',\n      start: new Date(),\n      end: new Date(new Date().setHours(new Date().getHours() + 1)),\n    },\n  ]);\n\n  // Handler: when a day is clicked in Month view, switch to Week view on that date\n  const handleSelectSlot = (slotInfo) => {\n    // slotInfo.start is the date user clicked\n    setCurrentDate(slotInfo.start);\n    setCurrentView(Views.WEEK);\n  };\n\n  return (\n    <div style={{ height: '80vh', margin: '0 auto' }}>\n      <Calendar\n        localizer={localizer}\n        events={events}\n        // Controlled date & view\n        date={currentDate}\n        view={currentView}\n        // Keep track of changes so the calendar updates\n        onNavigate={(newDate) => setCurrentDate(newDate)}\n        onView={(newView) => setCurrentView(newView)}\n        \n        // Which views to show\n        views={[Views.MONTH, Views.WEEK]}\n        // Start & end keys for event objects\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        \n        // Enable day clicks\n        selectable\n        // This triggers when user clicks (or drags) on a day slot\n        onSelectSlot={handleSelectSlot}\n      />\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,eAAe,QAAQ,oBAAoB;AACrE,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAM,CAAC;AAEzC,eAAe,SAASI,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC1C;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAIY,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAACE,KAAK,CAACa,KAAK,CAAC;;EAE3D;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CACnC;IACEkB,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,gBAAgB;IACvBC,KAAK,EAAE,IAAIR,IAAI,CAAC,CAAC;IACjBS,GAAG,EAAE,IAAIT,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACU,QAAQ,CAAC,IAAIV,IAAI,CAAC,CAAC,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9D,CAAC,CACF,CAAC;;EAEF;EACA,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;IACrC;IACAd,cAAc,CAACc,QAAQ,CAACL,KAAK,CAAC;IAC9BN,cAAc,CAACZ,KAAK,CAACwB,IAAI,CAAC;EAC5B,CAAC;EAED,oBACEpB,OAAA;IAAKqB,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAC,QAAA,eAC/CxB,OAAA,CAACL,QAAQ;MACPM,SAAS,EAAEA,SAAU;MACrBS,MAAM,EAAEA;MACR;MAAA;MACAe,IAAI,EAAErB,WAAY;MAClBsB,IAAI,EAAEnB;MACN;MAAA;MACAoB,UAAU,EAAGC,OAAO,IAAKvB,cAAc,CAACuB,OAAO,CAAE;MACjDC,MAAM,EAAGC,OAAO,IAAKtB,cAAc,CAACsB,OAAO;;MAE3C;MAAA;MACAC,KAAK,EAAE,CAACnC,KAAK,CAACa,KAAK,EAAEb,KAAK,CAACwB,IAAI;MAC/B;MAAA;MACAY,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAC;;MAEZ;MAAA;MACAC,UAAU;MACV;MAAA;MACAC,YAAY,EAAEjB;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpC,EAAA,CA/CuBD,iBAAiB;AAAAsC,EAAA,GAAjBtC,iBAAiB;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}